name: Publish release, Build and Push Docker Image.

on:
  push:
    branches:
      - "main"
      - "develop"
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  REGISTRY_USERNAME: ${{ github.actor }}
  REGISTRY_PASSWORD: ${{ secrets.GH_PACKAGE_WRITE_PAT }}
  IMAGE_NAME: ${{ github.repository }}
  IMAGE_LIMIT: 5
  GH_TOKEN: ${{ secrets.GH_PACKAGE_WRITE_PAT }}

jobs:
  release:
    name: Create and Publish a Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Bump Version and Push Tag
        id: bump_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          release_branches: main
          pre_release_branches: develop
          fetch_all_tags: true
          default_bump: patch
          default_prerelease_bump: prepatch
          tag_prefix: v
          append_to_pre_release_tag: "rc"
          github_token: ${{ env.GH_TOKEN }}

      - name: Make Release for Develop Branch
        if: github.ref == 'refs/heads/develop'
        uses: ncipollo/release-action@v1.14.0
        with:
          tag: ${{ steps.bump_version.outputs.new_tag }}
          body: ${{ steps.bump_version.outputs.changelog }}
          name: ${{ steps.bump_version.outputs.new_tag }}
          token: ${{ env.GH_TOKEN }}
          generateReleaseNotes: true
          prerelease: true

      - name: Make Release for Main Brach
        if: github.ref == 'refs/heads/main'
        uses: ncipollo/release-action@v1.14.0
        with:
          tag: ${{ steps.bump_version.outputs.new_tag }}
          body: ${{ steps.bump_version.outputs.changelog }}
          name: ${{ steps.bump_version.outputs.new_tag }}
          token: ${{ env.GH_TOKEN }}
          generateReleaseNotes: true

  build-and-publish-image:
    name: Build and Publish Docker Image
    runs-on: ubuntu-latest
    needs: release
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract branch name
        id: repo_metadata
        shell: bash
        run: echo "##[set-output name=branch_name;]$(echo ${GITHUB_REF##*/})"

      - name: Get latest tag
        id: get_latest_tag
        run: echo "::set-output name=TAG::$(git describe --tags --abbrev=0)"

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ env.GH_TOKEN }}

      - name: Extract metadata (tags, labels) from Docker
        id: docker_metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image (develop)
        uses: docker/build-push-action@v5
        if: github.ref == 'refs/heads/develop'
        with:
          context: .
          push: true
          file: ./infra/build/Dockerfile
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.get_latest_tag.outputs.TAG }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-rc
          labels: ${{ steps.docker_metadata.outputs.labels }}
          build-args: GITHUB_PAT=${{ env.GH_TOKEN }}

      - name: Build and push Docker image (main)
        uses: docker/build-push-action@v5
        if: github.ref == 'refs/heads/main'
        with:
          context: .
          push: true
          file: ./infra/build/Dockerfile
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.get_latest_tag.outputs.TAG }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          labels: ${{ steps.docker_metadata.outputs.labels }}
          build-args: GITHUB_PAT=${{ env.GH_TOKEN }}
